{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Learning Chef","body":"### My Experience with Chef\r\n\r\nThere are tons of blog posts about getting started with chef.  Some of them are useful, some are not (I'm looking at you, opscode!).  Most expect you to have a fairly good idea of what you're learning before you \"learn\" it.  Admittedly, chef is an extremely complex, flexible, powerful software package that allows you to do some AMAZING things.  \r\n\r\nRunning\r\n`knife ec2 server create -r 'role[app-server]' -I ami-82fa58eb -f t1.micro -S app-server -i ~/.ssh/app-key.pem --ssh-user ubuntu --region us-east-1`\r\nand having a working ubuntu 12.04 LTS server configured with rbenv, nginx, unicorn, the proper users, and ready for a `bin/cap production deploy:setup` is the stuff of unicorns and rainbows.  \r\n\r\nHowever, getting there was a trial.  I don't know if it's just that existing practitioners of chef (which is awesome!) have an enhanced sense of schaedenfreude, or it's just an uncompromising view of RTFM.  Either way, it makes learning chef a challenge.\r\n\r\n#### Getting Started","tagline":"Or why technical writers are so important...","google":""}